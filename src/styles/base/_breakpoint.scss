/** Breakpoint viewport sizes and media queries **/

// Breakpoints
$grid-breakpoints: (
  // Extra Small Mobile
  'xs': 0,
  // Small Mobile
  'sm': 576px,
  // Tablet
  'md': 768px,
  // Large Desktop
  'lg': 992px,
  // Extra Large Desktop
  'xl': 1200px,
  // 2 Extra Large Desktop
  'xxl': 1400px
);

/* Functions */

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
// Sample: breakpoint-min(sm) return 576px
@function breakpoint-min($name) {
  $min: map-get($grid-breakpoints, $name);
  @return if($min != 0, $min, null);
}

// Maximum breakpoint width.
// The maximum value is reduced by 0.02px to work around the limitations of
// `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
// Sample: breakpoint-max(md) return 767.98px
@function breakpoint-max($name) {
  $max: map-get($grid-breakpoints, $name);
  @return if($max and $max > 0, $max - 0.02, null);
}

/* Mixins */
// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
/// @param {string} $name - name of breakpoint in $grid-breakpoints
@mixin media-breakpoint-up($name) {
  $min: breakpoint-min($name);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
/// @param {string} $name - name of breakpoint in $grid-breakpoints
@mixin media-breakpoint-down($name) {
  $max: breakpoint-max($name);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}
